@page "/add-user"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using EmployeeDirectory.Models.Data
@using EmployeeDirectory.Models
@rendermode InteractiveServer
@inject AppDbContext DbContext

@attribute [Authorize(Policy = "Position")]

<h3>Add User</h3>

@if (addNewUser != null)
{
    <TelerikForm Model="@addNewUser" OnValidSubmit="@AddUserDb" Columns="2" ColumnSpacing="24px">
        <FormValidation>
            <DataAnnotationsValidator />
            <ValidationSummary />
        </FormValidation>

        <FormItems>
            <FormGroup LabelText="Employee Info">
                <FormItem Field="@nameof(addNewUser.Employee.FirstName)" EditorType="@FormEditorType.TextBox" LabelText="First Name" />
                <FormItem Field="@nameof(addNewUser.Employee.LastName)" EditorType="@FormEditorType.TextBox" LabelText="Last Name" />
                <FormItem Field="@nameof(addNewUser.Employee.Email)" EditorType="@FormEditorType.TextBox" LabelText="Email" />
                <FormItem Field="@nameof(addNewUser.Employee.PhoneNumber)" EditorType="@FormEditorType.TextBox" LabelText="Phone Number" />
                <FormItem Field="@nameof(addNewUser.Employee.HireDate)" EditorType="@FormEditorType.DatePicker" LabelText="Hire Date" />

                <FormItem Field="@nameof(addNewUser.Employee.DepartmentId)" LabelText="Department ID">
                    <Template>
                        <TelerikNumericTextBox @bind-Value="addNewUser.Employee.DepartmentId" Min="0" />
                    </Template>
                </FormItem>

                <FormItem Field="@nameof(addNewUser.Employee.JobTitleId)" LabelText="Job Title ID">
                    <Template>
                        <TelerikNumericTextBox @bind-Value="addNewUser.Employee.JobTitleId" Min="0" />
                    </Template>
                </FormItem>

                <FormItem Field="@nameof(addNewUser.Employee.IsActive)" EditorType="@FormEditorType.CheckBox" LabelText="Is Active" />
            </FormGroup>

            <FormGroup LabelText="User Account Info">
                <FormItem Field="@nameof(addNewUser.UserAccount.UserName)" EditorType="@FormEditorType.TextBox" LabelText="User Name" />
                <FormItem Field="@nameof(addNewUser.UserAccount.Password)" EditorType="@FormEditorType.TextBox" LabelText="Password" />
                @* EmployeeID is set programmatically after saving the Employee *@
            </FormGroup>
        </FormItems>

        <FormButtons>
            <TelerikButton ButtonType="ButtonType.Submit" ThemeColor="primary">Submit</TelerikButton>
        </FormButtons>
    </TelerikForm>

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <p style="color: green">@successMessage</p>
    }
}

@code {

    private AddUserViewModel addNewUser = new AddUserViewModel
    {
        Employee = new Employee(),
        UserAccount = new UserAccount()
    };

    private string successMessage = "";

    public class AddUserViewModel
    {
        public UserAccount UserAccount { get; set; }
        public Employee Employee { get; set; }
    }

    private void AddUserDb()
    {
        try
        {
            // Add the Employee first
            DbContext.Employees.Add(addNewUser.Employee);
            DbContext.SaveChanges();

            // Set the generated Employee.Id to UserAccount.EmployeeID
            addNewUser.UserAccount.EmployeeID = addNewUser.Employee.Id;
            addNewUser.UserAccount.PermissionID = 1; // example default permission id
            
            // Add the UserAccount
            DbContext.Users.Add(addNewUser.UserAccount);
            DbContext.SaveChanges();

            successMessage = "User and Employee added successfully!";

            // Reset form model for new entry
            addNewUser = new AddUserViewModel
                {
                    Employee = new Employee(),
                    UserAccount = new UserAccount()
                };
        }
        catch (Exception ex)
        {
            successMessage = $"Error: {ex.Message}";
        }
    }
}
